-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.booking
(
    date date,
    end_time time(6) without time zone,
    start_time time(6) without time zone,
    created_at timestamp(6) without time zone,
    id bigint NOT NULL,
    provider_id bigint,
    service_category_id bigint,
    user_id bigint,
    status character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT booking_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.booking_addon
(
    addon_id bigint,
    booking_id bigint,
    id bigint NOT NULL,
    CONSTRAINT booking_addon_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.otp
(
    code bigint NOT NULL,
    created_at timestamp(6) without time zone NOT NULL,
    expiry timestamp(6) without time zone NOT NULL,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT otp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.provider_profile
(
    avg_rating double precision NOT NULL,
    hourly_rate double precision NOT NULL,
    id bigint NOT NULL,
    user_id bigint,
    city character varying(100) COLLATE pg_catalog."default" NOT NULL,
    services character varying(255) COLLATE pg_catalog."default",
    status character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT provider_profile_pkey PRIMARY KEY (id),
    CONSTRAINT provider_profile_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.provider_schedule
(
    break_end_time time(6) without time zone,
    break_start_time time(6) without time zone,
    day_of_week smallint,
    end_time time(6) without time zone,
    start_time time(6) without time zone,
    id bigint NOT NULL,
    provider_id bigint,
    CONSTRAINT provider_schedule_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rating
(
    rating integer NOT NULL,
    booking_id bigint,
    created_at timestamp(6) without time zone,
    id bigint NOT NULL,
    provider_id bigint,
    user_id bigint,
    comment character varying(1000) COLLATE pg_catalog."default",
    CONSTRAINT rating_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.refresh_tokens
(
    expiry timestamp(6) with time zone NOT NULL,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    refresh_token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT refresh_tokens_pkey PRIMARY KEY (id),
    CONSTRAINT refresh_tokens_refresh_token_key UNIQUE (refresh_token),
    CONSTRAINT refresh_tokens_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    role_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    role_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (role_id),
    CONSTRAINT roles_role_name_key UNIQUE (role_name)
);

CREATE TABLE IF NOT EXISTS public.service_addon
(
    additional_price double precision NOT NULL,
    id bigint NOT NULL,
    service_category_id bigint,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT service_addon_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.service_category
(
    base_price double precision NOT NULL,
    id bigint NOT NULL,
    category_name character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    pricing_type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT service_category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_roles
(
    role_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (role_id, user_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    is_blocked boolean,
    is_dummy_user boolean,
    is_email_verified boolean,
    is_password_created boolean,
    created_at timestamp(6) without time zone,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    updated_at timestamp(6) without time zone,
    contact_number character varying(10) COLLATE pg_catalog."default",
    name character varying(50) COLLATE pg_catalog."default",
    email character varying(150) COLLATE pg_catalog."default" NOT NULL,
    address character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.booking
    ADD CONSTRAINT fk3bvkojbdxuvp1oav6ne8nas8n FOREIGN KEY (service_category_id)
    REFERENCES public.service_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.booking
    ADD CONSTRAINT fk7udbel7q86k041591kj6lfmvw FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.booking
    ADD CONSTRAINT fkffjvgyp1dfbdo7m5l66u6ktbv FOREIGN KEY (provider_id)
    REFERENCES public.provider_profile (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.booking_addon
    ADD CONSTRAINT fk1fh6ir112y8f9v2vq8g5wwo7b FOREIGN KEY (booking_id)
    REFERENCES public.booking (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.booking_addon
    ADD CONSTRAINT fk489afexsw9cbfmkdm5md4a0rg FOREIGN KEY (addon_id)
    REFERENCES public.service_addon (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.provider_profile
    ADD CONSTRAINT fkcfywmkagfcsmqib610q7l4px5 FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS provider_profile_user_id_key
    ON public.provider_profile(user_id);


ALTER TABLE IF EXISTS public.provider_schedule
    ADD CONSTRAINT fk8q19bba2eut1ryofwa6jxy6ml FOREIGN KEY (provider_id)
    REFERENCES public.provider_profile (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rating
    ADD CONSTRAINT fk5uwov2o2smr59n8gjrnw6r8i3 FOREIGN KEY (provider_id)
    REFERENCES public.provider_profile (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rating
    ADD CONSTRAINT fkf68lgbsbxl310n0jifwpfqgfh FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rating
    ADD CONSTRAINT fksxjfkf3kxooiimj82b64wmgrx FOREIGN KEY (booking_id)
    REFERENCES public.booking (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.refresh_tokens
    ADD CONSTRAINT fk1lih5y2npsf8u5o3vhdb9y0os FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS refresh_tokens_user_id_key
    ON public.refresh_tokens(user_id);


ALTER TABLE IF EXISTS public.service_addon
    ADD CONSTRAINT fk88rxrhd5q142xhnexaoffs8qs FOREIGN KEY (service_category_id)
    REFERENCES public.service_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT fkh8ciramu9cc9q3qcqiv4ue8a6 FOREIGN KEY (role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT fkhfh9dx7w3ubf1co1vdev94g3f FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;
